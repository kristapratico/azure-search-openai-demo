Talks: Friends don't let friends package alone Saturday - May 18th, 2024 10:30 a.m.-11 a.m. in Hall C   Presented by:  Leah Wasser  Description Python packaging can be a scary and confusing endeavor. The ecosystem can be thorny and filled with many decisions around which tool or approach to use. You’re also likely to get pricked by an approach or tutorial that doesn't work as expected. However, the packaging journey doesn’t have to be prickly - particularly for pure Python packages. By building community consensus around user goals and moderating healthy discussion, pyOpenSci is paving a smooth, thorn-free path for successful packaging. This talk presents pyOpenSci’s people-first approach to guiding the scientific community through thorny packaging decisions. First, we engaged with the broader community to understand packaging needs. Second, we brought together packaging experts, tool maintainers, and beginning-to-advanced users to successfully build consensus around tools and best practices. Community outreach helped us understand both user needs and the packaging tool ecosystem. Finally, consensus around tools and needs was transformed into accessible recommendations in our community-driven Packaging Guide. Guidebook pull requests go through extensive, open community review with 38 people and thousands of comments contributing to the guidebook’s current state. Careful moderation ensures healthy and productive conversations and also drives consensus-building around beginner-friendly content. Our guidebook’s development process allows us to harness community expertise to create an accessible and accurate packaging guide that smooths out the packaging path.  You will will walk away from this talk with a better understanding of:  Why consensus-building and user-focused content development is critical for tackling thorny topics such as packaging. How to decide which packaging tools satisfy your packaging needs. Where to find more information and support around packaging.   You don’t have to package alone. The vibrant Python community is here to help.        